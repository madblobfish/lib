version: "3.12"
services:
  prometheus:
    image: "prom/prometheus:@sha521{1234567}"
    command:
      - "--config.file=/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
    volumes:
      - "/srv/prometheus/prometheus-alertrules.yaml:/alert.rules:ro"
      - "/srv/prometheus/prometheus.yaml:/prometheus.yaml:ro"
      - "/srv/prometheus/storage/:/prometheus/"
    networks:
      - "other_net"
      - "private"
    deploy:
      mode: "replicated"
      replicas: 0 # 2
      endpoint_mode: "dnsrr"
      placement:
        constraints:
          - "node.hostname == host"
      labels:
        traefik.enable: true

  cadvisor:
    image: "gcr.io/cadvisor/cadvisor"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
      # - "/dev/disk/:/dev/disk:ro"
    networks:
      - "private"
    deploy:
      mode: "replicated"
      replicas: 0 # mode: global
      resources:
        limits:
          cpus: "0.10"
          memory: "128M"
        reservations:
          cpus: "0.10"
          memory: "64M"

  node-exporter:
    image: "prom/node-exporter"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
      - "/etc/hostname:/etc/host_hostname:ro"
      - "/etc/hostname:/etc/nodename:ro"
    environment:
      HOST_HOSTNAME: "/etc/host_hostname"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      - "--collector.textfile.directory=/etc/node-exporter/"
    networks:
      - "private"
    deploy:
      mode: "replicated"
      replicas: 0 # mode: global
      resources:
        limits:
          cpus: "0.10"
          memory: "128M"
        reservations:
          cpus: "0.10"
          memory: "64M"

  blackbox:
    image: "prom/blackbox-exporter"
    command:
      - "--config.file=/blackbox.yaml"
    volumes:
      - "/srv/blackbox.yaml:/blackbox.yaml:ro"
    networks:
      - "private"
      # cap_add:
      #   - CAP_NET_RAW # only if ping
    # ports:
    #   - 9115:9115/tcp
    deploy:
      mode: "replicated"
      replicas: 0 # mode: global
      resources:
        limits:
          cpus: "0.10"
          memory: "128M"
        reservations:
          cpus: "0.10"
          memory: "64M"

  alertmanager:
    image: "prom/alertmanager:latest"
    volumes:
      - "/srv/alertmanager.yaml:/config.yaml:ro"
    command:
      - "--config.file=/config.yaml"
      - "--storage.path=/alertmanager"
      - "--enable-feature=utf8-strict-mode"
    networks:
      - "other_net"
    deploy:
      mode: "replicated"
      replicas: 0 # 1
      placement:
        constraints:
          - "node.hostname == teitelbaum"
      labels:
        traefik.enable: "true"
        traefik.http.services.alertmanager-tls.loadbalancer.server.port: 9093
        traefik.http.routers.alertmanager-tls.rule: "Host(`domain.example`)"
        traefik.http.routers.alertmanager-tls.entrypoints: "https"
        traefik.http.routers.alertmanager-tls.tls: "true"
        traefik.http.routers.alertmanager-tls.middlewares: "alertmanager-auth"
        traefik.http.middlewares.alertmanager-auth.basicauth.users: "user:$$2y$$05$$qwerty"
        traefik.http.middlewares.alertmanager-auth.basicauth.realm: "alertmanager"

networks:
  private:
  other_net:
    external: true
