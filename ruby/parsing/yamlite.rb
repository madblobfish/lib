#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

# Experimental strict parser for a subset of yaml
#
# generated using: racc yamlite.y -o yamlite.rb
# $debug = true
class YAMLite < Racc::Parser

module_eval(<<'...end yamlite.y/module_eval...', 'yamlite.y', 41)
  def emit_indent()

  end
  def parse(str)
    @q = []
    row = 1
    column = 0
    start_of_file = true
    indent_type = nil
    indent_string = ''
    indent_level = 0
    until str.empty?
      case str
      when start_of_file && /\A---/
        row += 1
        # ignore
      when (@q.last || []).first != :INDENT && /\A #[^\n]+/
        # inline comment, ignore
      when (@q.last || []).first == :INDENT && /\A#[^\n]+/
        # comment, ignore
      when /\A\n(\t+)/
        if indent_type.nil?
          indent_type = $1.chr
        end
        row += 1
        column = $1.length
        raise 'mixed indent detected!' if ($1.split('') + [indent_type]).uniq.length != 1
        raise 'indent on empty line' if $'.chr == "\n"
        @q.push [:NEWLINE, '', row, 0] unless @q.last.first == :INDENT
        new_level = $1
        raise 'uneven indent, always use 2 spaces!' if indent_type == ' ' && new_level.length % 2 == 1
        depth = new_level.length / (indent_type == ' ' ? 2 : 1)
        diff = depth - indent_level
        if new_level.length > indent_string.length
          diff.abs.times{@q.push [:INDENT, $1, row, column]}
          indent_level += diff.abs
        elsif new_level.length < indent_string.length
          diff.abs.times{@q.push [:DEDENT, $1, row, column]}
          indent_level -= diff.abs
        end
        indent_string = new_level
      when /\A(true|false)/
        @q.push [:BOOL, $1, row, column]
        column += $1.length
      when /\A(-?)0x([0-9a-fA-F_]+)/
        @q.push [:NUMBER, ($1 == '-' ? -1 : 1) * Integer($2.tr('_', ''), 16), row, column]
        column += $1.length + 2 + $2.length
      when /\A(-?)([0-9_]+\.[0-9_]+)/
        @q.push [:NUMBER, ($1 == '-' ? -1 : 1) * $2.tr('_', '').to_f, row, column]
        column += $1.length + $2.length
      when /\A(-?)([0-9_]+)/
        @q.push [:NUMBER, ($1 == '-' ? -1 : 1) * Integer($2.tr('_', ''), 10), row, column]
        column += $1.length + $2.length
      when /\A"((?:[^"]|\\")+)"/
        @q.push [:STRING, $1, row, column]
        column += 2 + $1.length
      when /\A /
        @q.push [:SPACE, ' ', row, column]
        column += 1
      when /\A([:-])/
        @q.push [$1, '', row, column]
        column += 1
      when /\A\n/
        row += 1
        column = 0
        @q.push [:NEWLINE, '', row, column]
      when /\A([a-z0-9_-]+)/
        @q.push [:DICT_KEY, $1, row, column]
        column += $1.length
      else
        raise "could not tokenize '#{str}'"
      end
      start_of_file = false
      str = $'
    end
    # puts indent_level if $debug
    indent_level.times{@q.push [:DEDENT, $1, row, column]}
    @q.push [:EOF, 'EOF', row, column]
    # puts "tokens: #{@q.inspect}" if $debug
    @q.push [false, '$end', row, column]
    begin
      do_parse
    rescue
      raise "error parsing #{@current.first} at #{@current[2]}:#{@current[3]}"
    end
  end

  def next_token
    @current = @q.shift
    @current[0..1]
  end
...end yamlite.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,    24,    12,    13,    21,    29,    30,    31,     5,     6,
    14,     9,    24,    11,    24,    27,    15,    27,    29,    30,
    31,     9,     9,    11,    11,     9,    17,    18,    11,    25,
    32,    24,    34,    24,    24,    24,    42,    43,    44,    45,
    46,     9,    50,    51,    52,     9,     9,    55,    56 ]

racc_action_check = [
    21,    11,     1,     2,    11,    21,    21,    21,     0,     0,
     3,     0,    17,     0,    34,    17,     6,    34,    27,    27,
    27,    32,    46,    32,    46,     7,     8,     9,    10,    12,
    23,    24,    28,    29,    30,    31,    38,    39,    40,    41,
    44,    45,    47,    48,    49,    51,    52,    53,    54 ]

racc_action_pointer = [
     6,     2,     1,     8,   nil,   nil,    14,    20,    22,    21,
    21,    -2,    29,   nil,   nil,   nil,   nil,     9,   nil,   nil,
   nil,    -5,   nil,    22,    28,   nil,   nil,     8,    28,    30,
    31,    32,    16,   nil,    11,   nil,   nil,   nil,    27,    28,
    30,    31,   nil,   nil,    32,    36,    17,    33,    34,    35,
   nil,    40,    41,    38,    39,   nil,   nil ]

racc_action_default = [
   -25,   -25,   -25,   -25,    -3,    -4,   -25,    -6,   -25,    -9,
   -11,   -25,   -25,    -1,    -2,    -5,    -7,   -25,   -10,   -12,
   -13,   -25,   -20,   -25,   -23,    57,    -8,   -25,   -25,   -25,
   -25,   -25,   -25,   -24,   -25,   -17,   -18,   -19,   -25,   -25,
   -25,   -25,   -21,   -22,   -25,   -25,   -25,   -25,   -25,   -25,
   -16,   -25,   -25,   -25,   -25,   -14,   -15 ]

racc_goto_table = [
     3,     2,     1,    33,     4,    28,    20,    16,    35,    36,
    37,    19,    26,    40,    41,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    39,    38,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,    49,   nil,   nil,
   nil,    53,    54 ]

racc_goto_check = [
     3,     2,     1,     9,     4,     6,     7,     3,     9,     9,
     9,     2,     7,     9,    10,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,     3,     2,   nil,   nil,
   nil,     3,     3 ]

racc_goto_pointer = [
   nil,     2,     1,     0,     4,   nil,   -16,    -5,   nil,   -21,
   -20 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     7,     8,   nil,    10,    23,
    22 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 14, :_reduce_none,
  2, 14, :_reduce_none,
  1, 14, :_reduce_none,
  1, 17, :_reduce_none,
  2, 17, :_reduce_none,
  1, 16, :_reduce_none,
  2, 16, :_reduce_7,
  3, 18, :_reduce_8,
  1, 19, :_reduce_none,
  2, 19, :_reduce_none,
  1, 15, :_reduce_none,
  2, 15, :_reduce_12,
  2, 21, :_reduce_13,
  11, 21, :_reduce_14,
  11, 21, :_reduce_15,
  8, 21, :_reduce_16,
  3, 23, :_reduce_17,
  3, 23, :_reduce_18,
  3, 23, :_reduce_19,
  1, 20, :_reduce_none,
  4, 20, :_reduce_21,
  4, 20, :_reduce_22,
  1, 22, :_reduce_none,
  2, 22, :_reduce_none ]

racc_reduce_n = 25

racc_shift_n = 57

racc_token_table = {
  false => 0,
  :error => 1,
  :EOF => 2,
  :NEWLINE => 3,
  ":" => 4,
  :DICT_KEY => 5,
  :SPACE => 6,
  "-" => 7,
  :INDENT => 8,
  :DEDENT => 9,
  :BOOL => 10,
  :NUMBER => 11,
  :STRING => 12 }

racc_nt_base = 13

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "EOF",
  "NEWLINE",
  "\":\"",
  "DICT_KEY",
  "SPACE",
  "\"-\"",
  "INDENT",
  "DEDENT",
  "BOOL",
  "NUMBER",
  "STRING",
  "$start",
  "target",
  "list",
  "dict",
  "eof",
  "dict_entry",
  "dict_key",
  "value",
  "list_entry",
  "newline",
  "simple_value" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'yamlite.y', 7)
  def _reduce_7(val, _values, result)
     result = val[0].merge(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 8)
  def _reduce_8(val, _values, result)
     result = Hash[[[val[0], val[2]]]]
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'yamlite.y', 11)
  def _reduce_12(val, _values, result)
     val[1].unshift(val[0]); result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 12)
  def _reduce_13(val, _values, result)
     result = [val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 14)
  def _reduce_14(val, _values, result)
          outer = Hash[[[val[2], val[7]]]]
      result = [val[9].merge(outer)]

    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 18)
  def _reduce_15(val, _values, result)
          outer = Hash[[[val[2], val[7]]]]
      result = [val[9].merge(outer)]

    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 21)
  def _reduce_16(val, _values, result)
     result = [val[6].merge(Hash[[[val[2], val[4]]]])]
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 23)
  def _reduce_17(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 24)
  def _reduce_18(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 25)
  def _reduce_19(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'yamlite.y', 27)
  def _reduce_21(val, _values, result)
     result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'yamlite.y', 28)
  def _reduce_22(val, _values, result)
     result = val[2]
    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class YAMLite


if __FILE__ == $PROGRAM_NAME
  p YAMLite.new().parse(File.read(ARGV.first))
end
# $debug = false
